
@inproceedings{abbaspourasadollah2015,
  title = {A {{Survey}} on {{Testing}} for {{Cyber Physical System}}},
  booktitle = {Testing {{Software}} and {{Systems}}},
  author = {Abbaspour Asadollah, Sara and Inam, Rafia and Hansson, Hans},
  editor = {El-Fakih, Khaled and Barlas, Gerassimos and Yevtushenko, Nina},
  date = {2015},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {194--207},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-25945-1_12},
  abstract = {Cyber Physical Systems (CPS) bridge the cyber-world of computing and communications with the physical world and require development of secure and reliable software. It asserts a big challenge not only on testing and verifying the correctness of all physical and cyber components of such big systems, but also on integration of these components. This paper develops a categorization of multiple levels of testing required to test CPS and makes a comparison of these levels with the levels of software testing based on the V-model. It presents a detailed state-of-the-art survey on the testing approaches performed on the CPS. Further, it provides challenges in CPS testing.},
  isbn = {978-3-319-25945-1},
  langid = {english},
  keywords = {Cyber physical systems,Survey,Testing},
  note = {cit. on p. 205},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Abbaspour Asadollah et al/Abbaspour Asadollah et al_2015_A Survey on Testing for Cyber Physical System.pdf}
}

@article{alkhazi2020,
  title = {On the Value of Quality Attributes for Refactoring {{ATL}} Model Transformations: {{A}} Multi-Objective Approach},
  shorttitle = {On the Value of Quality Attributes for Refactoring {{ATL}} Model Transformations},
  author = {Alkhazi, Bader and Abid, Chaima and Kessentini, Marouane and Wimmer, Manuel},
  date = {2020-04},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {120},
  pages = {106243},
  issn = {09505849},
  doi = {10.1016/j.infsof.2019.106243},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0950584919302617},
  urldate = {2022-03-30},
  abstract = {Objective: In this paper, we propose a novel set of quality attributes to evaluate refactored ATL programs based on the hierarchical quality model QMOOD. Method: We used the proposed quality attributes to guide the selection of the best refactorings to improve ATL programs using multi-objective search. Results: We validate our approach on a comprehensive dataset of model transformations. The statistical analysis of our experiments on 30 runs shows that our automated approach recommended useful refactorings based on a benchmark of ATL transformations and compared to random search, mono-objective search formulation, a previous work based on a different formulation of multi-objective search with few quality metrics, and a semiautomated refactoring approach not based on heuristic search. Conclusion: All these existing studies did not use our QMOOD adaptation for ATL which confirms the relevance of our quality attributes to guide the search for good refactoring suggestions.},
  langid = {english},
  note = {cit. on p. 4},
  file = {/home/fabian/Zotero/storage/CKHGQJHA/Alkhazi et al. - 2020 - On the value of quality attributes for refactoring.pdf}
}

@book{bass1998,
  title = {Software Architecture in Practice},
  author = {Bass, Len},
  date = {1998},
  publisher = {{Addison-Wesley}},
  location = {{Reading, Mass}},
  isbn = {978-0-201-19930-7},
  langid = {english},
  pagetotal = {xxiii, 452},
  keywords = {Software architecture.,System design.},
  annotation = {Open Library ID: OL668208M}
}

@article{buse2010,
  title = {Learning a {{Metric}} for {{Code Readability}}},
  author = {Buse, Raymond P.L. and Weimer, Westley R.},
  date = {2010-07},
  journaltitle = {IEEE Transactions on Software Engineering},
  volume = {36},
  number = {4},
  pages = {546--558},
  issn = {1939-3520},
  doi = {10.1109/TSE.2009.70},
  abstract = {In this paper, we explore the concept of code readability and investigate its relation to software quality. With data collected from 120 human annotators, we derive associations between a simple set of local code features and human notions of readability. Using those features, we construct an automated readability measure and show that it can be 80 percent effective and better than a human, on average, at predicting readability judgments. Furthermore, we show that this metric correlates strongly with three measures of software quality: code changes, automated defect reports, and defect log messages. We measure these correlations on over 2.2 million lines of code, as well as longitudinally, over many releases of selected projects. Finally, we discuss the implications of this study on programming language design and engineering practice. For example, our data suggest that comments, in and of themselves, are less important than simple blank lines to local judgments of readability.},
  eventtitle = {{{IEEE Transactions}} on {{Software Engineering}}},
  keywords = {code metrics,Computer languages,Costs,Design engineering,Documentation,FindBugs.,Humans,machine learning,Machine learning,program understanding,Readability metrics,software maintenance,Software maintenance,Software measurement,Software quality,Software readability},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Buse_Weimer/Buse_Weimer_2010_Learning a Metric for Code Readability.pdf;/home/fabian/Zotero/storage/T7UTHIBU/5332232.html}
}

@inproceedings{chen2016,
  title = {Detecting Code Smells in {{Python}} Programs},
  booktitle = {2016 International Conference on {{Software Analysis}}, {{Testing}} and {{Evolution}} ({{SATE}})},
  author = {Chen, Zhifei and Chen, Lin and Ma, Wanwangying and Xu, Baowen},
  date = {2016},
  pages = {18--23},
  publisher = {{IEEE}},
  file = {/data/nextcloud/bachelorarbeit/sources/Chen et al/Chen et al_2016_Detecting code smells in Python programs.pdf}
}

@article{dalenogare2018,
  title = {The Expected Contribution of {{Industry}} 4.0 Technologies for Industrial Performance},
  author = {Dalenogare, Lucas Santos and Benitez, Guilherme Brittes and Ayala, Néstor Fabián and Frank, Alejandro Germán},
  date = {2018-10-01},
  journaltitle = {International Journal of Production Economics},
  shortjournal = {International Journal of Production Economics},
  volume = {204},
  pages = {383--394},
  issn = {0925-5273},
  doi = {10.1016/j.ijpe.2018.08.019},
  url = {https://www.sciencedirect.com/science/article/pii/S0925527318303372},
  urldate = {2022-05-22},
  abstract = {Industry 4.0 is considered a new industrial stage in which vertical and horizontal manufacturing processes integration and product connectivity can help companies to achieve higher industrial performance. However, little is known about how industries see the potential contribution of the Industry 4.0 related technologies for industrial performance, especially in emerging countries. Based on the use of secondary data from a large-scale survey of 27 industrial sectors representing 2225 companies of the Brazilian industry, we studied how the adoption of different Industry 4.0 technologies is associated with expected benefits for product, operations and side-effects aspects. Using regression analysis, we show that some of the Industry 4.0 technologies are seen as promising for industrial performance while some of the emerging technologies are not, which contraries the conventional wisdom. We discuss the contextual conditions of the Brazilian industry that may require a partial implementation of the Industry 4.0 concepts created in developed countries. We summarize our findings in a framework, that shows the perception of Brazilian industries of Industry 4.0 technologies and their relations with the expected benefits. Thus, this work contributes by discussing the real expectations on the future performance of the industry when implementing new technologies, providing a background to advance in the research on real benefits of the Industry 4.0.},
  langid = {english},
  keywords = {Advanced manufacturing,Digitization,Emerging countries,Industrial performance,Industry 4.0},
  file = {/home/fabian/Zotero/storage/RQTTXES2/S0925527318303372.html}
}

@book{fowler2012,
  title = {Refactoring: {{Improving}} the {{Design}} of {{Existing Code}}},
  shorttitle = {Refactoring},
  author = {Fowler, Martin and Beck, Kent and Brant, John and Opdyke, William and Roberts, Don},
  date = {2012-03-09},
  eprint = {HmrDHwgkbPsC},
  eprinttype = {googlebooks},
  publisher = {{Addison-Wesley}},
  abstract = {As the application of object technology--particularly the Java programming language--has become commonplace, a new problem has emerged to confront the software development community. Significant numbers of poorly designed programs have been created by less-experienced developers, resulting in applications that are inefficient and hard to maintain and extend. Increasingly, software system professionals are discovering just how difficult it is to work with these inherited, "non-optimal" applications. For several years, expert-level object programmers have employed a growing collection of techniques to improve the structural integrity and performance of such existing software programs. Referred to as "refactoring," these practices have remained in the domain of experts because no attempt has been made to transcribe the lore into a form that all developers could use. . .until now. In  Refactoring: Improving the Design of Existing Code,  renowned object technology mentor Martin Fowler breaks new ground, demystifying these master practices and demonstrating how software practitioners can realize the significant benefits of this new process.    With proper training a skilled system designer can take a bad design and rework it into well-designed, robust code. In this book, Martin Fowler shows you where opportunities for refactoring typically can be found, and how to go about reworking a bad design into a good one. Each refactoring step is simple--seemingly too simple to be worth doing. Refactoring may involve moving a field from one class to another, or pulling some code out of a method to turn it into its own method, or even pushing some code up or down a hierarchy. While these individual steps may seem elementary, the cumulative effect of such small changes can radically improve the design. Refactoring is a proven way to prevent software decay.    In addition to discussing the various techniques of refactoring, the author provides a detailed catalog of more than seventy proven refactorings with helpful pointers that teach you when to apply them; step-by-step instructions for applying each refactoring; and an example illustrating how the refactoring works. The illustrative examples are written in Java, but the ideas are applicable to any object-oriented programming language.},
  isbn = {978-0-13-306526-8},
  langid = {english},
  pagetotal = {461},
  keywords = {Computers / Programming / Object Oriented}
}

@book{fowler2018,
  title = {Refactoring: {{Improving}} the {{Design}} of {{Existing Code}}},
  shorttitle = {Refactoring},
  author = {Fowler, Martin},
  date = {2018-11-30},
  edition = {2nd edition},
  publisher = {{Addison-Wesley Professional}},
  location = {{Boston}},
  isbn = {978-0-13-475759-9},
  langid = {english},
  pagetotal = {448},
  note = {cit. on p. 5, 45, 47, 53, 56, 57, 71-72},
  file = {/data/nextcloud/bachelorarbeit/sources/Fowler/Fowler_2018_Refactoring.pdf}
}

@online{fowler2019,
  title = {Technical {{Debt}}},
  shorttitle = {Bliki},
  author = {Fowler, Martin},
  date = {2019-05-21},
  url = {https://martinfowler.com/bliki/TechnicalDebt.html},
  urldate = {2022-05-09},
  abstract = {Technical Debt is a metaphor for the consequences of cruft. You either have to accept a drag on further features (paying interest) or fix the software (paying the principal)},
  organization = {{martinfowler.com}},
  file = {/home/fabian/Zotero/storage/IZV76RIL/TechnicalDebt.html}
}

@online{geissvolkermaria,
  title = {Robotics and {{Cyber-Physical Systems}} | {{Computer Science Research}} at {{Max Planck Institutes}}},
  author = {Geiß, Volker Maria},
  url = {https://www.cis.mpg.de/robotics/},
  urldate = {2022-05-14},
  langid = {american},
  file = {/home/fabian/Zotero/storage/Z668F24R/robotics.html}
}

@inproceedings{jazdi2014,
  title = {Cyber Physical Systems in the Context of {{Industry}} 4.0},
  booktitle = {2014 {{IEEE International Conference}} on {{Automation}}, {{Quality}} and {{Testing}}, {{Robotics}}},
  author = {Jazdi, N.},
  date = {2014-05},
  pages = {1--4},
  doi = {10.1109/AQTR.2014.6857843},
  abstract = {We are currently experiencing the fourth Industrial Revolution in terms of cyber physical systems. These systems are industrial automation systems that enable many innovative functionalities through their networking and their access to the cyber world, thus changing our everyday lives significantly. In this context, new business models, work processes and development methods that are currently unimaginable will arise. These changes will also strongly influence the society and people. Family life, globalization, markets, etc. will have to be redefined. However, the Industry 4.0 simultaneously shows characteristics that represent the challenges regarding the development of cyber-physical systems, reliability, security and data protection. Following a brief introduction to Industry 4.0, this paper presents a prototypical application that demonstrates the essential aspects.},
  eventtitle = {2014 {{IEEE International Conference}} on {{Automation}}, {{Quality}} and {{Testing}}, {{Robotics}}},
  keywords = {Actuators,Automation,Cloud Technology,CPS,Embedded systems,Industries,Industry 4.0,Intelligent sensors,Internet,Internet of Things},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Jazdi/Jazdi_2014_Cyber physical systems in the context of Industry 4.pdf;/home/fabian/Zotero/storage/NQZNX2T5/6857843.html}
}

@online{kapurpulkit2020,
  title = {Introduction to {{Automatic Testing}} of {{Robotics Applications}}},
  author = {Kapur, Pulkit},
  date = {2020-07-01T12:26:43-08:00},
  url = {https://aws.amazon.com/blogs/robotics/automatic-testing-robotics/},
  urldate = {2022-05-14},
  abstract = {This blog will explore best practices for testing and validation of robotics and autonomous systems running Robot Operating System (ROS) software. We will review how developers can increase their feature velocity and reduce errors by using simulation-based testing.},
  langid = {american},
  organization = {{Amazon Web Services}},
  file = {/home/fabian/Zotero/storage/BCT9JUSD/automatic-testing-robotics.html}
}

@inproceedings{kim2012,
  title = {A Field Study of Refactoring Challenges and Benefits},
  booktitle = {Proceedings of the {{ACM SIGSOFT}} 20th {{International Symposium}} on the {{Foundations}} of {{Software Engineering}}},
  author = {Kim, Miryung and Zimmermann, Thomas and Nagappan, Nachiappan},
  date = {2012-11-11},
  series = {{{FSE}} '12},
  pages = {1--11},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2393596.2393655},
  url = {https://doi.org/10.1145/2393596.2393655},
  urldate = {2022-03-09},
  abstract = {It is widely believed that refactoring improves software quality and developer productivity. However, few empirical studies quantitatively assess refactoring benefits or investigate developers' perception towards these benefits. This paper presents a field study of refactoring benefits and challenges at Microsoft through three complementary study methods: a survey, semi-structured interviews with professional software engineers, and quantitative analysis of version history data. Our survey finds that the refactoring definition in practice is not confined to a rigorous definition of semantics-preserving code transformations and that developers perceive that refactoring involves substantial cost and risks. We also report on interviews with a designated refactoring team that has led a multi-year, centralized effort on refactoring Windows. The quantitative analysis of Windows 7 version history finds that the binary modules refactored by this team experienced significant reduction in the number of inter-module dependencies and post-release defects, indicating a visible benefit of refactoring.},
  isbn = {978-1-4503-1614-9},
  keywords = {churn,component dependencies,defects,empirical study,refactoring,software evolution},
  note = {cit. on p. 1},
  file = {/data/nextcloud/bachelorarbeit/sources/Kim et al/Kim et al_2012_A field study of refactoring challenges and benefits.pdf}
}

@article{kruchten2012,
  title = {Technical {{Debt}}: {{From Metaphor}} to {{Theory}} and {{Practice}}},
  shorttitle = {Technical {{Debt}}},
  author = {Kruchten, Philippe and Nord, Robert L. and Ozkaya, Ipek},
  date = {2012-11},
  journaltitle = {IEEE Software},
  volume = {29},
  number = {6},
  pages = {18--21},
  issn = {1937-4194},
  doi = {10.1109/MS.2012.167},
  abstract = {The metaphor of technical debt in software development was introduced two decades ago to explain to nontechnical stakeholders the need for what we call now "refactoring." As the term is being used to describe a wide range of phenomena, this paper proposes an organization of the technical debt landscape, and introduces the papers on technical debt contained in the issue.},
  eventtitle = {{{IEEE Software}}},
  keywords = {evolvability,Investments,maintainability,refactoring,Risk management,Software maintenance,software quality,Software quality,Sofware testing,technical debt},
  note = {cit. on p. 18},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Kruchten et al/Kruchten et al_2012_Technical Debt.pdf;/home/fabian/Zotero/storage/JH3GWQH3/6336722.html}
}

@article{lacerda2020,
  title = {Code Smells and Refactoring: {{A}} Tertiary Systematic Review of Challenges and Observations},
  shorttitle = {Code Smells and Refactoring},
  author = {Lacerda, Guilherme and Petrillo, Fabio and Pimenta, Marcelo and Guéhéneuc, Yann Gaël},
  date = {2020-09-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {167},
  pages = {110610},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2020.110610},
  url = {https://www.sciencedirect.com/science/article/pii/S0164121220300881},
  urldate = {2022-03-08},
  abstract = {Refactoring and smells have been well researched by the software-engineering research community these past decades. Several secondary studies have been published on code smells, discussing their implications on software quality, their impact on maintenance and evolution, and existing tools for their detection. Other secondary studies addressed refactoring, discussing refactoring techniques, opportunities for refactoring, impact on quality, and tools support. In this paper, we present a tertiary systematic literature review of previous surveys, secondary systematic literature reviews, and systematic mappings. We identify the main observations (what we know) and challenges (what we do not know) on code smells and refactoring. We perform this tertiary review using eight scientific databases, based on a set of five research questions, identifying 40 secondary studies between 1992 and 2018. We organize the main observations and challenges about code smell and their refactoring into: smells definitions, most common code-smell detection approaches, code-smell detection tools, most common refactoring, and refactoring tools. We show that code smells and refactoring have a strong relationship with quality attributes, i.e., with understandability, maintainability, testability, complexity, functionality, and reusability. We argue that code smells and refactoring could be considered as the two faces of a same coin. Besides, we identify how refactoring affects quality attributes, more than code smells. We also discuss the implications of this work for practitioners, researchers, and instructors. We identify 13 open issues that could guide future research work. Thus, we want to highlight the gap between code smells and refactoring in the current state of software-engineering research. We wish that this work could help the software-engineering research community in collaborating on future work on code smells and refactoring.},
  langid = {english},
  keywords = {Code smells,Refactoring,Tertiary systematic review},
  note = {cit. on p. 2, 15},
  file = {/data/nextcloud/bachelorarbeit/sources/Lacerda et al/Lacerda et al_2020_Code smells and refactoring.pdf;/data/nextcloud/bachelorarbeit/sources/Lacerda et al/Lacerda et al_2020_Code smells and refactoring2.pdf;/home/fabian/Zotero/storage/2JV42PS8/S0164121220300881.html}
}

@inproceedings{malburg2020,
  title = {Using {{Physical Factory Simulation Models}} for {{Business Process Management Research}}},
  booktitle = {Business {{Process Management Workshops}}},
  author = {Malburg, Lukas and Seiger, Ronny and Bergmann, Ralph and Weber, Barbara},
  editor = {Del Río Ortega, Adela and Leopold, Henrik and Santoro, Flávia Maria},
  date = {2020},
  series = {Lecture {{Notes}} in {{Business Information Processing}}},
  pages = {95--107},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-66498-5_8},
  abstract = {The production and manufacturing industries are currently transitioning towards more autonomous and intelligent production lines within the Fourth Industrial Revolution (Industry~4.0). Learning Factories as small scale physical models of real shop floors are realistic platforms to conduct research in the smart manufacturing area without depending on expensive real world production lines or completely simulated data. In this work, we propose to use learning factories for conducting research in the context of Business Process Management (BPM) and Internet of Things (IoT) as this combination promises to be mutually beneficial for both research areas. We introduce our physical Fischertechnik factory models simulating a complex production line and three exemplary use cases of combining BPM and IoT, namely the implementation of a BPM abstraction stack on top of a learning factory, the experience-based adaptation and optimization of manufacturing processes, and the stream processing-based conformance checking of IoT-enabled processes.},
  isbn = {978-3-030-66498-5},
  langid = {english},
  keywords = {Business process management,Cyber-physical production systems,Digital twins,Factory simulation models,Industry 4.0},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Malburg et al/Malburg et al_2020_Using Physical Factory Simulation Models for Business Process Management.pdf}
}

@book{martin2008,
  title = {Clean {{Code}}: {{A Handbook}} of {{Agile Software Craftsmanship}}},
  shorttitle = {Clean {{Code}}},
  author = {Martin, Robert},
  date = {2008-08-01},
  edition = {1st edition},
  publisher = {{Prentice Hall}},
  location = {{Upper Saddle River, NJ}},
  isbn = {978-0-13-235088-4},
  langid = {english},
  pagetotal = {464},
  file = {/data/nextcloud/bachelorarbeit/sources/Martin/Martin_2008_Clean Code.pdf}
}

@article{mens2003,
  title = {Refactoring: {{Current Research}} and {{Future Trends}}},
  shorttitle = {Refactoring},
  author = {Mens, Tom and Demeyer, Serge and Du Bois, Bart and Stenten, Hans and Van Gorp, Pieter},
  date = {2003-12-01},
  journaltitle = {Electronic Notes in Theoretical Computer Science},
  shortjournal = {Electronic Notes in Theoretical Computer Science},
  series = {{{LDTA}}'2003 - {{Language}} Descriptions, {{Tools}} and {{Applications}}},
  volume = {82},
  number = {3},
  pages = {483--499},
  issn = {1571-0661},
  doi = {10.1016/S1571-0661(05)82624-6},
  url = {https://www.sciencedirect.com/science/article/pii/S1571066105826246},
  urldate = {2022-03-09},
  abstract = {In this paper we provide an detailed overview of existing research in the field of software restructuring and refactoring, from a formal as well as a practical point of view. Next, we propose an extensive list of open questions that indicate future research directions, and we provide some partial answers to these questions.},
  langid = {english},
  note = {cit. on p. 1},
  file = {/data/nextcloud/bachelorarbeit/sources/Mens et al/Mens et al_2003_Refactoring.pdf;/home/fabian/Zotero/storage/BT56SWF6/S1571066105826246.html}
}

@article{mens2004,
  title = {A Survey of Software Refactoring},
  author = {Mens, T. and Tourwé, T.},
  date = {2004},
  journaltitle = {IEEE Transactions on Software Engineering},
  doi = {10.1109/TSE.2004.1265817},
  abstract = {This research is compared and discussed based on a number of different criteria: the refactoring activities that are supported, the specific techniques and formalisms that are used for supporting these activities, the types of software artifacts that are being refactored, the important issues that need to be taken into account when buildingRefactoring tool support, and the effect of refactors on the software process. We provide an extensive overview of existing research in the field of software refactoring. This research is compared and discussed based on a number of different criteria: the refactoring activities that are supported, the specific techniques and formalisms that are used for supporting these activities, the types of software artifacts that are being refactored, the important issues that need to be taken into account when building refactoring tool support, and the effect of refactoring on the software process. A running example is used to explain and illustrate the main concepts.},
  note = {cit. on p. 129},
  file = {/data/nextcloud/bachelorarbeit/sources/Mens et al/Mens et al_2004_A survey of software refactoring.pdf}
}

@book{menshawy2021,
  title = {Code {{Smells}} and {{Detection Techniques}}: {{A Survey}}},
  shorttitle = {Code {{Smells}} and {{Detection Techniques}}},
  author = {Menshawy, Rana and Hassan Yousef, Ahmed and Salem, Ashraf},
  date = {2021-05-26},
  pages = {83},
  doi = {10.1109/MIUCC52538.2021.9447669},
  pagetotal = {78},
  note = {cit. on p. 1}
}

@article{osterrieder2020,
  title = {The Smart Factory as a Key Construct of Industry 4.0: {{A}} Systematic Literature Review},
  shorttitle = {The Smart Factory as a Key Construct of Industry 4.0},
  author = {Osterrieder, Philipp and Budde, Lukas and Friedli, Thomas},
  date = {2020-03-01},
  journaltitle = {International Journal of Production Economics},
  shortjournal = {International Journal of Production Economics},
  volume = {221},
  pages = {107476},
  issn = {0925-5273},
  doi = {10.1016/j.ijpe.2019.08.011},
  url = {https://www.sciencedirect.com/science/article/pii/S0925527319302865},
  urldate = {2022-05-22},
  abstract = {Industry 4.0 is a ubiquitous term throughout general newspapers, on company websites or in scientific journals. One of its key constructs is the smart factory, envisioned as a future state of a fully connected manufacturing system, mainly operating without human force by generating, transferring, receiving and processing necessary data to conduct all required tasks for producing all kinds of goods. Although the understanding of smart factory concepts has been sharpened in the last years, it is still difficult for industrial companies to establish a concrete strategy roadmap within the jungle of different terminologies, ideas and concepts. To generate further clarity and to consolidate the previous findings around smart factory for researchers as well as for practitioner, we conducted a systematic literature review. For this purpose, we chose a five steps approach: Scope definition, topic conceptualisation, literature search, literature analysis and synthesis, and synthesis of future research questions. During our review, we found that research within each perspective is fragmented and unequally advanced. Most publications treat single use cases with low generalizability, often rely upon machine data, typically have a technical nature and seldom incorporate impact estimations. In this paper, our key academic and practical contribution lies in the categorisation of the selected publications into eight thematic distinct perspectives within the sphere of smart factory: Decision making, cyber-physical systems, data handling, IT infrastructure, digital transformation, human machine interaction, IoT, and cloud manufacturing and services. These are further developed into the smart factory research model, stating a foundation for future research endeavors.},
  langid = {english},
  keywords = {Big data,Industry 4.0,Internet-of-Things,Literature review,Smart factory,Smart manufacturing},
  file = {/home/fabian/Zotero/storage/T8NZD7ZN/S0925527319302865.html}
}

@inproceedings{rajkumar2010,
  title = {Cyber-Physical Systems: {{The}} next Computing Revolution},
  shorttitle = {Cyber-Physical Systems},
  booktitle = {Design {{Automation Conference}}},
  author = {Rajkumar, Ragunathan and Lee, Insup and Sha, Lui and Stankovic, John},
  date = {2010-06},
  pages = {731--736},
  issn = {0738-100X},
  doi = {10.1145/1837274.1837461},
  abstract = {Cyber-physical systems (CPS) are physical and engineered systems whose operations are monitored, coordinated, controlled and integrated by a computing and communication core. Just as the internet transformed how humans interact with one another, cyber-physical systems will transform how we interact with the physical world around us. Many grand challenges await in the economically vital domains of transportation, health-care, manufacturing, agriculture, energy, defense, aerospace and buildings. The design, construction and verification of cyber-physical systems pose a multitude of technical challenges that must be addressed by a cross-disciplinary community of researchers and educators.},
  eventtitle = {Design {{Automation Conference}}},
  keywords = {Communication system control,computer science,Control systems,cyber-physical systems,engineering,grand challenges,Humans,Internet,Manufacturing,Monitoring,new frontiers,Physics computing,Power generation economics,Systems engineering and theory,Transportation},
  note = {cit. on p. 763},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Rajkumar et al/Rajkumar et al_2010_Cyber-physical systems.pdf;/home/fabian/Zotero/storage/SVVV7AEW/5523280.html}
}

@inproceedings{seiger2020,
  title = {Towards {{IoT-driven Process Event Log Generation}} for {{Conformance Checking}} in {{Smart Factories}}},
  booktitle = {2020 {{IEEE}} 24th {{International Enterprise Distributed Object Computing Workshop}} ({{EDOCW}})},
  author = {Seiger, Ronny and Zerbato, Francesca and Burattin, Andrea and García-Bañuelos, Luciano and Weber, Barbara},
  date = {2020-10},
  pages = {20--26},
  issn = {2325-6605},
  doi = {10.1109/EDOCW49879.2020.00016},
  abstract = {The Internet of Things (IoT) enables software-based access to vast amounts of data streams from sensors measuring physical and virtual properties of smart devices and their surroundings. While sophisticated means for the control and data analysis of single IoT devices exist, a more process-oriented view of IoT systems is often missing. Such a lack of process awareness hinders the development of process-based systems on top of IoT environments and the application of process mining techniques for process analysis and optimization in IoT. We propose a framework for the stepwise correlation and composition of raw IoT sensor streams with events and activities on a process level based on Complex Event Processing (CEP). From this correlation we derive refined process event logs-possibly with ambiguities-that can be used for process analysis at runtime (i. e., online). We discuss the framework using examples from a smart factory.},
  eventtitle = {2020 {{IEEE}} 24th {{International Enterprise Distributed Object Computing Workshop}} ({{EDOCW}})},
  keywords = {Complex Event Processing,Conformance Checking,Correlation,Grippers,Intelligent sensors,Internet of Things,Process Mining,Production,Sensors,Smart Factories,Smart manufacturing},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Seiger et al/Seiger et al_2020_Towards IoT-driven Process Event Log Generation for Conformance Checking in.pdf;/home/fabian/Zotero/storage/RX4TTW7P/9233283.html}
}

@inproceedings{sonnleithner2021,
  title = {Do You Smell It Too? {{Towards Bad Smells}} in {{IEC}} 61499 {{Applications}}},
  shorttitle = {Do You Smell It Too?},
  booktitle = {2021 26th {{IEEE International Conference}} on {{Emerging Technologies}} and {{Factory Automation}} ({{ETFA}} )},
  author = {Sonnleithner, Lisa and Oberlehner, Michael and Kutsia, Elene and Zoitl, Alois and Bacsi, Sandor},
  date = {2021-09-07},
  pages = {1--4},
  publisher = {{IEEE}},
  location = {{Vasteras, Sweden}},
  doi = {10.1109/ETFA45728.2021.9613379},
  url = {https://ieeexplore.ieee.org/document/9613379/},
  urldate = {2022-03-08},
  abstract = {Bad Smells are certain suboptimal structures or patterns in software. They can cause maintenance issues and hinder understandability. Therefore, it is essential to avoid Bad Smells in software. While the topic is well researched in other fields, it is still an open issue in industrial automation. In this work, we are taking a step towards closing that gap and propose a catalog of IEC 61499 Bad Smells.},
  eventtitle = {2021 {{IEEE}} 26th {{International Conference}} on {{Emerging Technologies}} and {{Factory Automation}} ({{ETFA}})},
  isbn = {978-1-72812-989-1},
  langid = {english},
  note = {cit. on p. 1},
  file = {/data/nextcloud/bachelorarbeit/sources/Sonnleithner et al/Sonnleithner et al_2021_Do you smell it too.pdf}
}

@article{taipale2011,
  title = {Trade-off between Automated and Manual Software Testing},
  author = {Taipale, Ossi and Kasurinen, Jussi and Karhu, Katja and Smolander, Kari},
  date = {2011-06},
  journaltitle = {International Journal of System Assurance Engineering and Management},
  shortjournal = {Int J Syst Assur Eng Manag},
  volume = {2},
  number = {2},
  pages = {114--125},
  issn = {0975-6809, 0976-4348},
  doi = {10.1007/s13198-011-0065-6},
  url = {http://link.springer.com/10.1007/s13198-011-0065-6},
  urldate = {2022-05-17},
  abstract = {The study explores the current state of test automation in software testing organizations by focusing on the views and observations of managers, testers and developers in each organization. The case study was conducted in selected organizational units that develop and test technical software for industrial automation or telecommunication domains. The data was collected with 41 theme-based interviews in each unit. The interview data was analyzed qualitatively by using the grounded theory research method. It was found that although test automation was viewed as beneficial, it was not utilized widely in the companies. The main benefits of test automation were quality improvement, the possibility to execute more tests in less time and fluent reuse of testware. The major disadvantages were the costs associated with developing test automation especially in dynamic customized environments. Such issues as properties of tested products, attitudes of employees, resource limitations, and customers influenced the level of test automation in the case organizations.},
  langid = {english},
  note = {cit. on p. 114, 122},
  file = {/home/fabian/Zotero/storage/FPYJ6PJU/Taipale et al. - 2011 - Trade-off between automated and manual software te.pdf}
}

@article{tom2013,
  title = {An Exploration of Technical Debt},
  author = {Tom, Edith and Aurum, Aybüke and Vidgen, Richard},
  date = {2013-06-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {86},
  number = {6},
  pages = {1498--1516},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2012.12.052},
  url = {https://www.sciencedirect.com/science/article/pii/S0164121213000022},
  urldate = {2022-05-09},
  abstract = {Context Whilst technical debt is considered to be detrimental to the long term success of software development, it appears to be poorly understood in academic literature. The absence of a clear definition and model for technical debt exacerbates the challenge of its identification and adequate management, thus preventing the realisation of technical debt's utility as a conceptual and technical communication device. Objective To make a critical examination of technical debt and consolidate understanding of the nature of technical debt and its implications for software development. Method An exploratory case study technique that involves multivocal literature review, supplemented by interviews with software practitioners and academics to establish the boundaries of the technical debt phenomenon. Result A key outcome of this research is the creation of a theoretical framework that provides a holistic view of technical debt comprising a set of technical debts dimensions, attributes, precedents and outcomes, as well as the phenomenon itself and a taxonomy that describes and encompasses different forms of the technical debt phenomenon. Conclusion The proposed framework provides a useful approach to understanding the overall phenomenon of technical debt for practical purposes. Future research should incorporate empirical studies to validate heuristics and techniques that will assist practitioners in their management of technical debt.},
  langid = {english},
  keywords = {Benefits and drawbacks,Code debt,Multivocal literature review,Outcomes,Precedents,Technical debt},
  file = {/home/fabian/nextcloud/bachelorarbeit/sources/Tom et al/Tom et al_2013_An exploration of technical debt.pdf;/home/fabian/Zotero/storage/SAENWDY7/S0164121213000022.html}
}

@article{turlea2019,
  title = {Model-in-the-{{Loop Testing}} for {{Cyber Physical Systems}}},
  author = {Turlea, Ana},
  date = {2019-03-25},
  journaltitle = {ACM SIGSOFT Software Engineering Notes},
  shortjournal = {SIGSOFT Softw. Eng. Notes},
  volume = {44},
  number = {1},
  pages = {37--41},
  issn = {0163-5948},
  doi = {10.1145/3310013.3310019},
  url = {https://dl.acm.org/doi/10.1145/3310013.3310019},
  urldate = {2022-05-14},
  abstract = {Context: Nowadays, there is of high interest to use automated testing, not only because it optimizes the manual testing by reducing the needed time and cost, but also because manual testing is more likely to produce errors. Increasing the safety of software controlled complex systems, that use many distributed electronic controlled units, requires extensive testing. In model based testing, the test specification is derived from the system requirements and a model that describes selected functional and nonfunctional aspects of the system under test.},
  langid = {english},
  file = {/home/fabian/Zotero/storage/V2LZ6MZL/Turlea - 2019 - Model-in-the-Loop Testing for Cyber Physical Syste.pdf}
}

@article{wang2015,
  title = {Current Status and Advancement of Cyber-Physical Systems in Manufacturing},
  author = {Wang, Lihui and Törngren, Martin and Onori, Mauro},
  date = {2015-10-01},
  journaltitle = {Journal of Manufacturing Systems},
  shortjournal = {Journal of Manufacturing Systems},
  volume = {37},
  pages = {517--527},
  issn = {0278-6125},
  doi = {10.1016/j.jmsy.2015.04.008},
  url = {https://www.sciencedirect.com/science/article/pii/S0278612515000400},
  urldate = {2022-05-22},
  abstract = {This paper presents the current status and the latest advancement of cyber-physical systems (CPS) in manufacturing. In order to understand CPS and its future potential in manufacturing, definitions and characteristics of CPS are explained and compared with cloud manufacturing concept. Research and applications are outlined to highlight the latest advancement in the field. CPS shows great promise in factories of the future in the areas of future trends as identified at the end of this paper.},
  langid = {english},
  file = {/home/fabian/Zotero/storage/VLNJDGY7/S0278612515000400.html}
}

@online{zotero-undefined,
  title = {Technical {{Debt Quadrant}}},
  shorttitle = {Bliki},
  url = {https://martinfowler.com/bliki/TechnicalDebtQuadrant.html},
  urldate = {2022-05-09},
  abstract = {People argue about whether some kinds of bad code count as Technical Debt. I prefer to focus on the interest/principal decision, and recognize debt has different causes.},
  organization = {{martinfowler.com}},
  file = {/home/fabian/Zotero/storage/3NW8HVQQ/TechnicalDebtQuadrant.html}
}

@online{zotero-undefineda,
  title = {Gherkin {{Reference}}},
  url = {https://cucumber.io/docs/gherkin/reference/},
  urldate = {2022-05-17},
  organization = {{Cucumber Documentation}},
  file = {/home/fabian/Zotero/storage/XZ9NKH3R/reference.html}
}

@online{zotero-undefinedb,
  title = {An Exploration of Technical Debt | {{Elsevier Enhanced Reader}}},
  doi = {10.1016/j.jss.2012.12.052},
  url = {https://reader.elsevier.com/reader/sd/pii/S0164121213000022?token=1AA8D79D3702BFC4DFC93F052F86FB37E15224F3B0672AD8B1787AC9E3AC904311396E3691EF37F8977E850E46313D34&originRegion=eu-west-1&originCreation=20220509072935},
  urldate = {2022-05-09},
  langid = {english},
  file = {/home/fabian/Zotero/storage/BGXDKU5B/S0164121213000022.html}
}

@online{zotero-undefinedc,
  title = {Radon Documentation},
  url = {https://radon.readthedocs.io/en/latest/},
  urldate = {2022-05-17},
  file = {/home/fabian/Zotero/storage/DTL8CVE2/latest.html}
}

@online{zotero-undefinedd,
  title = {The Expected Contribution of {{Industry}} 4.0 Technologies for Industrial Performance | {{Elsevier Enhanced Reader}}},
  doi = {10.1016/j.ijpe.2018.08.019},
  url = {https://reader.elsevier.com/reader/sd/pii/S0925527318303372?token=0A6584F6D5B0C28AE7633F8884AF5D903AFCCD61D4413AF2682DC0897C46B18117FEDC470A4D6C2F6BB95ECD9E50BC0E&originRegion=eu-west-1&originCreation=20220522090955},
  urldate = {2022-05-22},
  langid = {english},
  file = {/home/fabian/Zotero/storage/UIUNSXUW/S0925527318303372.html}
}


